name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build-and-push-image:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/express-hello-world:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/express-hello-world:latest

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Prepare SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 via Docker Compose
			  run: |
			    ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
			      # Docker 설치 확인 및 설치
			      if ! command -v docker >/dev/null; then
			        sudo apt-get update
			        sudo apt-get install -y \
			          ca-certificates \
			          curl \
			          gnupg \
			          lsb-release
			        sudo mkdir -p /etc/apt/keyrings
			        curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
			          | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
			        echo \
			          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
			          https://download.docker.com/linux/ubuntu \
			          $(lsb_release -cs) stable" \
			          | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
			        sudo apt-get update
			        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
			        sudo usermod -aG docker $USER
			        # 그룹 변경사항 적용을 위해 새 셸 세션 시작
			        exec sudo su -l $USER
			      fi
			      
			      # Node.js 설치 확인 및 설치
			      if ! command -v node >/dev/null; then
			        curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
			        sudo apt-get install -y nodejs
			      fi
			      
			      # 배포 디렉토리로 이동 및 Docker Compose 실행
			      cd /home/${{ secrets.SERVER_USER }}/backend
			      
			      # Docker Compose 명령어 (환경에 따라 조정)
			      if command -v docker-compose >/dev/null; then
			        docker-compose pull
			        docker-compose up -d
			      else
			        docker compose pull
			        docker compose up -d
			      fi
			    EOF